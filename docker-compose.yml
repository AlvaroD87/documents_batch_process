version: '3.8'

services:
  # RabbitMQ Service
  rabbitmq:
    image: rabbitmq:3-management-alpine # Use the management image for UI access
    hostname: rabbitmq # Set a hostname for the service
    ports:
      - "5672:5672" # Standard AMQP port
      - "15672:15672" # Management UI port
    environment:
      RABBITMQ_DEFAULT_USER: guest # Default user
      RABBITMQ_DEFAULT_PASS: guest # Default password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq # Persist RabbitMQ data

  # Spring Boot Microservice
  camel-rabbitmq-service:
    build:
      context: . # Build context is the current directory
      dockerfile: Dockerfile # Use the Dockerfile in the current directory
    ports:
      - "8080:8080" # Map container port 8080 to host port 8080
    environment:
      # Ensure Spring Boot connects to the RabbitMQ service using its service name
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
    depends_on:
      - rabbitmq # Ensure RabbitMQ starts before the Spring Boot service
    # Healthcheck (optional but recommended for production)
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  rabbitmq_data: # Define the named volume for RabbitMQ data persistence
